!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var t=r();for(var i in t)("object"==typeof exports?exports:e)[i]=t[i]}}(this,(()=>(()=>{"use strict";var e={d:(r,t)=>{for(var i in t)e.o(t,i)&&!e.o(r,i)&&Object.defineProperty(r,i,{enumerable:!0,get:t[i]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{default:()=>t});const t={treeToFlat:(e,r)=>{const t={childField:"children",returnFields:[],...r},{childField:i,returnFields:o}=t;var n=[];return function e(r){r.forEach((r=>{if(Array.isArray(o)&&0!==o.length){const e={};o.forEach((t=>e[t]=r[t])),n.push(e)}else n.push(r);r[i]?.length&&e(r[i])}))}(e),n},flatToTree:(e,r)=>{const t={id:"id",pid:"pid",children:"children",...r},{id:i,pid:o,children:n}=t,d={};e.forEach((e=>{d[e[i]]=e}));const c=[];return e.forEach((e=>{var r=d[e[o]];r?(r[n]||(r[n]=[])).push(e):c.push(e)})),c},findTreeParentById:(e,r,t)=>{const i={id:"id",children:"children",...t},{id:o,children:n}=i,d=[];try{const t=e=>{e.forEach((e=>{if(d.push(e[o]),e[o]===r)throw"";e[n]&&t(e[n]),d.pop()}))};t(e)}catch(e){}return d},findFlatParentById:(e,r,t)=>{const i={id:"id",pid:"pid",...t},{id:o,pid:n}=i,d=[];let c=r;for(;c;){const r=e.find((e=>e[o]==c));if(!r)return d;c=r[n],d.unshift(r[o])}}};return r=r.default})()));